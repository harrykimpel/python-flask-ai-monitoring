{
    "name": "AI model comparison",
    "description": null,
    "permissions": "PUBLIC_READ_WRITE",
    "pages": [
        {
            "name": "AI model comparison",
            "description": null,
            "widgets": [
                {
                    "title": "AI Model Cost",
                    "layout": {
                        "column": 1,
                        "row": 1,
                        "width": 4,
                        "height": 4
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.table"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM lookup(AIModelCost) select latest(`cost-input`) as '$ Input/1M tokens', latest(`cost-output`) as '$ output/1M tokens' facet vendor,response.model "
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        }
                    }
                },
                {
                    "title": "Input vs. Ouput tokens by model",
                    "layout": {
                        "column": 5,
                        "row": 1,
                        "width": 4,
                        "height": 4
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.table"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "SELECT sum(gen_ai.usage.prompt_tokens) as 'Sum input tokens', sum(gen_ai.usage.completion_tokens) as 'Sum output tokens' FROM Span SINCE 24 hours ago where telemetry.sdk.name = 'opentelemetry' facet gen_ai.request.model"
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        }
                    }
                },
                {
                    "title": "Input vs. Ouput tokens by model",
                    "layout": {
                        "column": 9,
                        "row": 1,
                        "width": 4,
                        "height": 4
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "legend": {
                            "enabled": true
                        },
                        "markers": {
                            "displayedTypes": {
                                "criticalViolations": false,
                                "deployments": true,
                                "relatedDeployments": true,
                                "warningViolations": false
                            }
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "SELECT sum(gen_ai.usage.prompt_tokens) as 'Sum input tokens', sum(gen_ai.usage.completion_tokens) as 'Sum output tokens' FROM Span SINCE 24 hours ago where telemetry.sdk.name = 'opentelemetry' facet gen_ai.request.model TIMESERIES "
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": {
                            "isLabelVisible": true
                        },
                        "yAxisLeft": {
                            "zero": true
                        },
                        "yAxisRight": {
                            "zero": true
                        }
                    }
                },
                {
                    "title": "Total Cost",
                    "layout": {
                        "column": 1,
                        "row": 5,
                        "width": 4,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.table"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span join(from lookup(AIModelCost) select latest(`cost-input`) as costInput, latest(`cost-input-tokens`) as costInputTokens, latest(`cost-output`) as costOutput, latest(`cost-output-tokens`) as costOutputTokens facet response.model as 'gen_ai.request.model') on gen_ai.request.model SELECT sum(gen_ai.usage.prompt_tokens)/latest(costInputTokens)*latest(costInput)+sum(gen_ai.usage.completion_tokens)/latest(costOutputTokens)*latest(costOutput) as 'Cost in $', sum(gen_ai.usage.total_tokens)  as 'Sum tokens' where telemetry.sdk.name = 'opentelemetry' and gen_ai.usage.total_tokens is not NULL since 1 week ago facet gen_ai.request.model"
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": [
                            {
                                "columnName": "Cost in $",
                                "from": 0.1,
                                "severity": "critical"
                            },
                            {
                                "columnName": "Cost in $",
                                "from": 0.01,
                                "severity": "warning",
                                "to": 0.099
                            },
                            {
                                "columnName": "Cost in $",
                                "from": 0.00001,
                                "severity": "success",
                                "to": 0.0099
                            }
                        ]
                    }
                },
                {
                    "title": "Input Cost",
                    "layout": {
                        "column": 5,
                        "row": 5,
                        "width": 4,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.table"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span join(from lookup(AIModelCost) select latest(`cost-input`) as costInput, latest(`cost-input-tokens`) as costInputTokens, latest(`cost-output`) as costOutput, latest(`cost-output-tokens`) as costOutputTokens facet response.model as 'gen_ai.request.model') on gen_ai.request.model SELECT sum(gen_ai.usage.prompt_tokens)/latest(costInputTokens)*latest(costInput) as 'Cost in $', sum(gen_ai.usage.prompt_tokens)  as 'Sum tokens' where telemetry.sdk.name = 'opentelemetry' and gen_ai.usage.total_tokens is not NULL since 1 week ago facet gen_ai.request.model"
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": [
                            {
                                "columnName": "Cost in $",
                                "from": 0.02,
                                "severity": "critical"
                            },
                            {
                                "columnName": "Cost in $",
                                "from": 0.008,
                                "severity": "warning",
                                "to": 0.0199
                            },
                            {
                                "columnName": "Cost in $",
                                "from": 0,
                                "severity": "success",
                                "to": 0.00799
                            }
                        ]
                    }
                },
                {
                    "title": "Output Cost",
                    "layout": {
                        "column": 9,
                        "row": 5,
                        "width": 4,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.table"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span join(from lookup(AIModelCost) select latest(`cost-input`) as costInput, latest(`cost-input-tokens`) as costInputTokens, latest(`cost-output`) as costOutput, latest(`cost-output-tokens`) as costOutputTokens facet response.model as 'gen_ai.request.model') on gen_ai.request.model SELECT sum(gen_ai.usage.completion_tokens)/latest(costOutputTokens)*latest(costOutput) as 'Cost in $', sum(gen_ai.usage.completion_tokens)  as 'Sum tokens' where telemetry.sdk.name = 'opentelemetry' and gen_ai.usage.total_tokens is not NULL since 1 week ago facet gen_ai.request.model"
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": [
                            {
                                "columnName": "Cost in $",
                                "from": 0.1,
                                "severity": "critical"
                            },
                            {
                                "columnName": "Cost in $",
                                "from": 0.004,
                                "severity": "warning",
                                "to": 0.0999
                            },
                            {
                                "columnName": "Cost in $",
                                "from": 0,
                                "severity": "success",
                                "to": 0.00399
                            }
                        ]
                    }
                },
                {
                    "title": "Total Cost",
                    "layout": {
                        "column": 1,
                        "row": 8,
                        "width": 4,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "legend": {
                            "enabled": true
                        },
                        "markers": {
                            "displayedTypes": {
                                "criticalViolations": false,
                                "deployments": true,
                                "relatedDeployments": true,
                                "warningViolations": false
                            }
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span join(from lookup(AIModelCost) select latest(`cost-input`) as costInput, latest(`cost-input-tokens`) as costInputTokens, latest(`cost-output`) as costOutput, latest(`cost-output-tokens`) as costOutputTokens facet response.model as 'gen_ai.request.model') on gen_ai.request.model SELECT 50000,sum(gen_ai.usage.prompt_tokens)/latest(costInputTokens)*latest(costInput)+sum(gen_ai.usage.completion_tokens)/latest(costOutputTokens)*latest(costOutput) as 'Cost in $', sum(gen_ai.usage.total_tokens)  as 'Sum tokens' where telemetry.sdk.name = 'opentelemetry' and gen_ai.usage.total_tokens is not NULL since 1 week ago facet gen_ai.request.model timeseries"
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": {
                            "isLabelVisible": true
                        },
                        "yAxisLeft": {
                            "zero": true
                        },
                        "yAxisRight": {
                            "zero": true
                        }
                    }
                },
                {
                    "title": "Input Cost",
                    "layout": {
                        "column": 5,
                        "row": 8,
                        "width": 4,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "legend": {
                            "enabled": true
                        },
                        "markers": {
                            "displayedTypes": {
                                "criticalViolations": false,
                                "deployments": true,
                                "relatedDeployments": true,
                                "warningViolations": false
                            }
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span join(from lookup(AIModelCost) select latest(`cost-input`) as costInput, latest(`cost-input-tokens`) as costInputTokens, latest(`cost-output`) as costOutput, latest(`cost-output-tokens`) as costOutputTokens facet response.model as 'gen_ai.request.model') on gen_ai.request.model SELECT 50000,sum(gen_ai.usage.prompt_tokens)/latest(costInputTokens)*latest(costInput) as 'Cost in $', sum(gen_ai.usage.prompt_tokens)  as 'Sum tokens' where telemetry.sdk.name = 'opentelemetry' and gen_ai.usage.total_tokens is not NULL since 1 week ago facet gen_ai.request.model TIMESERIES "
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": {
                            "isLabelVisible": true
                        },
                        "yAxisLeft": {
                            "zero": true
                        },
                        "yAxisRight": {
                            "zero": true
                        }
                    }
                },
                {
                    "title": "Output Cost",
                    "layout": {
                        "column": 9,
                        "row": 8,
                        "width": 4,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "legend": {
                            "enabled": true
                        },
                        "markers": {
                            "displayedTypes": {
                                "criticalViolations": false,
                                "deployments": true,
                                "relatedDeployments": true,
                                "warningViolations": false
                            }
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span join(from lookup(AIModelCost) select latest(`cost-input`) as costInput, latest(`cost-input-tokens`) as costInputTokens, latest(`cost-output`) as costOutput, latest(`cost-output-tokens`) as costOutputTokens facet response.model as 'gen_ai.request.model') on gen_ai.request.model SELECT 50000,sum(gen_ai.usage.completion_tokens)/latest(costOutputTokens)*latest(costOutput) as 'Cost in $', sum(gen_ai.usage.completion_tokens)  as 'Sum tokens' where telemetry.sdk.name = 'opentelemetry' and gen_ai.usage.total_tokens is not NULL since 1 week ago facet gen_ai.request.model TIMESERIES "
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        },
                        "thresholds": {
                            "isLabelVisible": true
                        },
                        "yAxisLeft": {
                            "zero": true
                        },
                        "yAxisRight": {
                            "zero": true
                        }
                    }
                },
                {
                    "title": "Raw Data",
                    "layout": {
                        "column": 1,
                        "row": 11,
                        "width": 12,
                        "height": 3
                    },
                    "linkedEntityGuids": null,
                    "visualization": {
                        "id": "viz.table"
                    },
                    "rawConfiguration": {
                        "facet": {
                            "showOtherSeries": false
                        },
                        "nrqlQueries": [
                            {
                                "accountIds": [
                                    NEW_RELIC_ACCOUNT_ID
                                ],
                                "query": "FROM Span select * since 1 week ago where instrumentation.provider = 'opentelemetry' and gen_ai.usage.total_tokens is NOT NULL"
                            }
                        ],
                        "platformOptions": {
                            "ignoreTimeRange": false
                        }
                    }
                }
            ]
        }
    ],
    "variables": []
}